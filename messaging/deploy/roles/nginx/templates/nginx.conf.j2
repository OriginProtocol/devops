user www-data;
worker_processes auto;
worker_rlimit_nofile 1024; # ulimit -n is 1024

pid       {{ nginx_directory }}/nginx.pid;

events {
    use epoll;
    worker_connections 1024;
    multi_accept on;
}

http {
    access_log {{  nginx_access_log }};
    error_log {{ nginx_error_log }};

    client_max_body_size         2m;
    client_body_buffer_size      10k;
    client_header_buffer_size    1k;
    large_client_header_buffers  2 1k;

    # hide server/version in response header
    server_tokens             off;

    gzip                      on;
    gzip_http_version         1.1;
    gzip_comp_level           6;
    gzip_min_length           128;
    gzip_disable              msie6;
    gzip_proxied              any;
    gzip_buffers              100 64k;
    gzip_types                application/json;


    upstream ipfs_api {
        server 127.0.0.1:{{ ipfs_api_port }};
    }


    upstream ipfs_gateway {
        server 127.0.0.1:{{ ipfs_gateway_port }};
    }

    upstream ipfs_websocket {
        server 127.0.0.1:{{ ipfs_websocket_port }};
    }

    #server {
    #    listen 80;
    #    server_name gateway.originprotocol.com;
    #    default_type text/plain;
    #    add_header X-Error-Message "This server only supports HTTPS" always;
    #    return 505 "This server only supports HTTPS\n";
    #}

    server {
        listen               {{ nginx_ipfs_api_proxy_port }};
        # server_name          <configured>.originprotocol.com;
        # ssl                  on;
        # ssl_certificate      ;
        # ssl_certificate_key  ;
        #ssl_protocols TLSv1 TLSv1.1 TLSv1.2 SSLv3;
        #proxy_set_header     SSL on;

        # set client body size to 2M
        client_max_body_size 2M;

        auth_basic "Halt!";
        auth_basic_user_file    {{ nginx_auth_file }};

        location / {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header   X-Real-IP $remote_addr;

            proxy_pass              http://ipfs_api;
            proxy_read_timeout      30; # client timeout < proxy_read_timeout < IPFS timeout
        }

    }

    server {
        listen                 {{ nginx_ipfs_gateway_proxy_port }};
        # server_name          <configured>.originprotocol.com;
        # ssl                  on;
        # ssl_certificate      ;
        # ssl_certificate_key  ;
        #ssl_protocols TLSv1 TLSv1.1 TLSv1.2 SSLv3;
        #proxy_set_header     SSL on;

        auth_basic "Halt!";
        auth_basic_user_file    {{ nginx_auth_file }};

        location / {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header   X-Real-IP $remote_addr;

            proxy_pass              http://ipfs_gateway;
            proxy_read_timeout      30; # client timeout < proxy_read_timeout < IPFS timeout
        }

    }

    server {
        listen                 {{ nginx_ipfs_websocket_proxy_port }};
        # server_name          <configured>.originprotocol.com;
        # ssl                  on;
        # ssl_certificate      ;
        # ssl_certificate_key  ;
        #ssl_protocols TLSv1 TLSv1.1 TLSv1.2 SSLv3;
        #proxy_set_header     SSL on;

        auth_basic "Halt!";
        auth_basic_user_file    {{ nginx_auth_file }};

        location / {
            auth_basic "Halt!";
            auth_basic_user_file    {{ nginx_auth_file }};

            error_page              400 401 402 403 404 405 500 503;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header   X-Real-IP $remote_addr;

            proxy_pass              http://ipfs_websocket;
            proxy_read_timeout      30; # client timeout < proxy_read_timeout < IPFS timeout

        }

    }


}
